1.Конструктор __init__ прнимает 2 аргумента (login, password).Данный метод лишь сохраняет атрибут login и password.

2.Cвойство геттер login, которое возвращает значение self.__login;

3.Свойство сеттер login, принимает значение емайла в случае если:
    3.1.Емайл(логин) содержит хотя бы 1 символ "@". В случае ошибки выводим ValueError("Login must include at least one ' @ '")
    3.2 Email(login) содержит хотя бы 1 символ " . ".В случае ошибки выводим ValueError("Login must include at least one ' . '")
    Если значение проходит проверку новое значение логина сохраняется в атрибут (self.__login)

4.Свойство геттер password, которое возвращает значение self.__password;

5.Свойство сеттер password, принимает значение пароля в случае если:
    5.1.Password является строкой(не список,словарь и т.д) и TypeError("Пароль должен быть строкой")

    5.2.Длинна Password больше 4 и меньше 12 символов : ошибка ValueError('Пароль должен быть длиннее 4 и меньше 12 символов')

    5.3.Должен содержать хотя бы одну цифру. Для этого нужно в staticmethod создать функцию is_include_digit которая,
    которая проходит по всем элементам строки и проверяет их наличие в digits.
    В случае ошибки выводим: ValueError('Пароль должен содержать хотя бы одну цифру')

    5.4.Строка password должна содержать элементы верхнего и нижнего регистра.В staticmethod создаем метод (is_include_all_register),
    который с помощью цикла проверяет элемента строчки на регистр. В случае ошибки выводит: ValueError('Пароль должен содержать хотя бы 2 заглавные буквы')

    5.5.Строка password должна содержать только латинские символы.Импортируем библиотеку string ,в staticmethod создаем метод(is_include_only_latin)
    которым проверяем, каждый элемент на наличие в string(проверка должна быть как в верхнем, так и нижнем регистре).
    в случае ошибки ValueError('Пароль должен содержать только латинский алфавит')

Создаем текстовый файл (esypass.txt) который содержит 30 самых легких паролей.С помощью staticmethod создаем метод (easy_password)
и проверяем наличие нашего пароля в списке estpass.txt. Если значение совпаадет со занчением из списка,
то в сеттер добавляем исключение и выводим ошибку: ValueError('Ваш пароль содержиться в списке самых легких')

В метод __init__ добавляем защищенный аттрибут self.__secret со значением "U r hacked Pentagon". Значение self.__secret будет доступно
если написать пароль, который содержится в переменной self.password. Для этого создаем метод secret, в котором создаем переменную s,
= input. Делаем проверку, если переменная s == self.password то возвращаем значение self.__secret.
В противном случае. выводим ошибку ValueError("Access closed")
code tests
